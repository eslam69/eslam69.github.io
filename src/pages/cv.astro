---
import Layout from '../layouts/Layout.astro';
import { myName } from './index.astro';

const education = [
  {
    degree: "Master's in Electrical and Computer Engineering (MEng) (with a focus on Autonomous Systems and AI)",
    school: 'University of Ottawa',
    location: 'Ottawa, Canada',
    year: '2023 - 2024',
    description: [
      'Overall Grade: A+',
      'Coursework & Topics: AI for Cybersecurity, Learning-Based Computer Vision, Reinforcement Learning for Intelligent Control, Applied Machine learning, Robotics, Ubiquitous Sensing for Smart Cities, Autonomous Mobile Robotics.',
    ],
  },
  {
    degree: 'B.S. in Systems & Biomedical Engineering',
    school: 'Cairo University',
    location: 'Cairo, Egypt',
    year: '2016 - 2021',
    description: [
      'CGPA: 3.44/4 (Very Good), Graduation Project Grade: Excellent',
      'Relevant coursework: Data structures & Algorithms, Database Design, Computer Architecture, Software Engineering, Computer Networking, Image processing, Computer Vision, IoT, Probability & Statistics, Machine Learning, Linear Algebra, Calculus, DSP, Embedded Systems, Computer Graphics, Control, Microelectronics.',
    ],
  },
];

const experience = [
  {
    title: 'Embedded Linux Software Engineer',
    company: 'Valeo',
    location: 'Cairo, Egypt',
    period: 'Nov. 2023 - Present',
    description: [
      'Developing and maintaining software codes (C/C++) based on defined component requirements and component design.',
      'Developing and testing of software components that connect the vehicle with surrounding vehicles, smart devices or to the infrastructure (V2X).',
      'Developing, coding and testing of software components that provide telematics services to the vehicle such as Emergency Call, LTE connectivity, Firmware Update OTA, Vehicle SW updates.',
    ],
  },
  {
    title: 'AI Software Engineer',
    company: 'Tomorrow Smile',
    location: 'Remote, Canada · (Part-time)',
    period: 'Jan. 2024 - Apr. 2024',
    description: [
      'Researched and implemented state-of-the-art deep learning models for automated teeth alignment and dental landmark detection for dental planning software.',
      'Developed functionalities for 3D dental scan processing and visualization using VTK.',
    ],
  },
  {
    title: 'Open Source Software Contributor',
    company: 'Google Summer of Code at (INCF)',
    location: 'Remote',
    period: 'May. 2023 - Oct. 2024',
    description: [
      'Developed an integration between HippoUnit and Neuroptimus, two popular tools for neuroscience modeling and simulation. [2023] [2024]',
      'Conducted thorough compatibility testing between HippoUnit and Neuroptimus feature-based optimization, verifying their synergy for enhanced neuronal model accuracy.',
      'Enhanced Neuroptimus\'s graphical interface for HippoUnit integration by transforming the Qt-based GUI into a scalable design, resolving optimization process hurdles, and reorganizing elements for improved user experience.',
      'Implemented saving and loading functionality for Neuroptimus, enabling users to save and load optimization settings seamlessly within the GUI.',
      'Added a progress bar feature for both CLI and GUI modes, providing real-time monitoring of optimization progress.',
      'Containerized the Neuroptimus using Docker to ensure easy reproducibility across different environments.',
    ],
  },
  {
    title: 'Machine Learning Research Intern',
    company: 'ONE Lab Egypt',
    location: 'Giza, Egypt',
    period: 'Aug. 2021 - Oct. 2021',
    description: [
      'Worked on building a Text-to-Speech (TTS) Deep learning pipeline for deployment on edge devices such as the NVIDIA Jetson Nano & Rasperry-pi 4, with the goal of assisting individuals with Autism Spectrum Disorder (ASD).',
      'Conducted benchmarks on state-of-the-art TTS model architectures on low-level embedded kits.',
      'Utilized TensorFlow Lite, ONNX and TensorRT to optimize model performance and reduce inference time.',
      'Created scripts for a user-friendly, end-to-end inference pipeline for the TTS system.',
    ],
  },
  {
    title: 'Software Engineer (Internship)',
    company: 'Master Micro',
    location: 'Cairo, Egypt',
    period: 'Sep. 2020 - Jan. 2021',
    description: [
      'Worked on the Analog Designer\'s Toolbox project as part of the ADT team, utilizing agile and TDD practices.',
      'Developed a tool with a user-friendly GUI for creating high-quality electrical circuit schematic diagrams, featuring functionality such as drawing and editing schematics, generating and customizing reports, and importing and exporting designs in various formats.',
      'These functionalities are used by analog designers to improve and speed-up the design process and increase their productivity.',
    ],
  },
];

const skills = [
  {
    category: 'Technical Skills',
    skills: 'Software Engineering, Optimization, Machine learning, Embedded systems, Computer Vision, OOP, Algorithms',
  },
  {
    category: 'Tools and Languages',
    skills: 'C(Embedded C), C++(STL, Boost, gtest), Python, ROS, TensorFlow, OpenGL, Qt, OpenCv, R',
  },
  {
    category: 'Embedded Systems',
    skills: 'Micro‑controllers: (8051 ,AVR atmega16, atmega32), Embedded linux ,Misra C, Design Patterns for Embedded Systems',
  },
  {
    category: 'Web Development',
    skills: 'Flask, JavaScript, HTML, CSS, Bootstrap',
  },
  {
    category: 'Databases',
    skills: 'MySQL, SQLite, MongoDB',
  },
  {
    category: 'Simulation Tools',
    skills: 'Proteus, Simulink, Gazebo, CARLA',
  },
];

const projects = [
  {
    title: 'IoT Web-based Dashboard',
    technologies: ['Flask', 'ROS', 'Dash', 'Plotly', 'CSS'],
    description: 'Designed and developed a user interface connected to a data acquisition mobile robot through ROS communication. The interface facilitated real-time control, sensory data plotting, space-time sensory data mapping using heatmaps, and incorporated features for comprehensive historical data analysis.',
    demoLink: 'https://youtu.be/Cj7dUl67Fww?si=yy_5OJI-ni-1Tfc1',
    year: '2024',
  },
  {
    title: 'Efficient Monocular Depth Estimation',
    technologies: ['Deep Learning', 'PyTorch'],
    description: 'Implemented an advanced Encoder-Decoder model for precise monocular depth estimation using RGB frames. Achieved notable efficiency improvements compared to existing methods.',
    year: '2023',
  },
  {
    title: 'Securing CAN Bus using CNNs and Ensemble Methods',
    technologies: ['Deep Learning', 'PyTorch'],
    description: 'Developed Intrusion detection models for the automotive Controller Area Network Bus utilizing Convolutional Neural Networks and Ensemble Methods.',
    year: '2023',
  },
  {
    title: 'Adaptive DNS Data Exfiltration Detection on a Kafka Stream',
    technologies: ['Kafka', 'Docker', 'Machine Learning'],
    description: 'Conducted thorough analysis and preprocessing of DNS traffic data, addressed data imbalances, and utilized feature engineering for dimensionality reduction. Implemented a binary classification pipeline to predict DNS-based data exfiltration. Integrated pipeline into Kafka streaming within Docker. Implemented dynamic analysis: processed 1,000 observations in sliding window. Dynamically retrained model based on evolving metrics for real-time threat detection.',
    year: '2023',
  },
  {
    title: 'Wireless Sensor Node Deployment Optimization using Particle Swarm Optimization in ns-3 Simulator',
    technologies: ['IoT', 'C++', 'ns-3', 'Optimization'],
    description: 'Designed and created a wireless sensor node deployment optimization system utilizing Particle Swarm Optimization, developed using the ns-3 simulator and C++, to enhance network coverage and performance.',
    year: '2023',
  },
  {
    title: 'Multi-Service Daemon Logger for Raspberry Pi',
    technologies: ['C++', 'POSIX', 'Boost', 'CMake'],
    description: 'Developed a versatile logger daemon for Raspberry Pi to centralize and manage log data from various applications. Implemented POSIX communication, including sockets and pipes, and utilized a custom C++ library for synchronized shared memory operations. Integrated Boost logger module, enabling dynamic configuration via a config file. Automated module builds with CMake.',
    githubLink: 'https://github.com/eslam69/RPI-MultiService-Logger-Daemon',
    year: '2023',
  },
  {
    title: 'Online Model-Free Reinforcement Learning for the Trajectory Tracking Control of Quadcopters',
    technologies: ['Reinforcement Learning', 'Adaptive Control', 'C++'],
    description: 'Implemented an online model-free reinforcement learning approach to enhance quadcopter trajectory tracking, outperforming traditional PID controllers in challenging scenarios with dynamic conditions and sudden payload changes.',
    year: '2023',
  },
  {
    title: '3D Object Detection and Classification from Lidar Point Clouds Data',
    technologies: ['Python', 'Open3D', 'Deep learning', 'PyTorch'],
    description: 'Extracted Lidar point-clouds from the Waymo data set, done visualization, conversion to a birds-eye view representation then done inference with FPN-ResNet.',
    year: '2023',
  },
  {
    title: 'Lidar and Camera Senors Fusion for Multi-Target Tracking',
    technologies: ['Extended Kalman Filter', 'Open3D', 'Deep learning'],
    description: 'Implemented an extended Kalman filter to track several vehicles over time, by fusing camera and lidar detections.',
    year: '2023',
  },
  {
    title: 'Scan Matching Localization in CARLA',
    technologies: ['C++', 'PCL', 'CARLA Simulator', 'Eigen'],
    description: 'Implemented Iterative Closest Point (ICP) Algorithm on 3D point cloud map obtained from Carla simulator to recover the position of a car as it moves.',
    year: '2023',
  },
  {
    title: 'Optimization Toolkit for Neural Models (BSc Graduation Project)',
    technologies: ['Python', 'Neuroscience', 'Multi-objective optimization', 'Parallel Computing', 'QML', 'Qt'],
    description: 'A semi/full automated optimization tool to calibrate complex neural computer models with experimental data, enhancing the study of nervous system and muscle control by accurately mimicking cellular mechanisms and neural signals.',
    githubLink: 'https://github.com/ForthePareto/SpikOpt',
    year: '2021',
  },
  {
    title: 'Indoor Localization Wearable',
    technologies: ['Python', 'C++', 'IoT', 'Machine learning', 'Firebase', 'Esp32'],
    description: 'A wearable device that helps to track the location of patients indoor e.g hospitals based on wifi‑figerprints.',
    githubLink: 'https://github.com/eslam69/Indoor-Localization-wearable',
    year: '2021',
  },
  {
    title: 'SpikeCV',
    technologies: ['Python', 'Computer Vision'],
    description: 'A library that implements a variety of Image processing and computer vision algorithms from scratch, with a user‑friendly GUI.',
    githubLink: 'https://github.com/ForthePareto/SpikeCV',
    year: '2021',
  },
  {
    title: 'Advanced Lane Finding System for Self‑Driving Cars',
    technologies: ['Python', 'Computer Vision'],
    description: 'A road‑lane lines detection pipeline with Computer Vision.',
    githubLink: 'https://github.com/eslam69/Advanced-Lane-Finding',
    year: '2021',
  },
  {
    title: 'Automated Dead Chicken Detection System',
    technologies: ['Computer Vision', 'YOLOv8', 'Jetson Nano', 'TensorRT', 'ROS'],
    description: 'Developed automated system for detecting deceased chickens utilizing YOLOv8. Achieved an impressive Mean Average Precision (MAP) of 0.91. Successfully deployed the model on Jetson Nano, optimizing performance through TensorRT inference. Integrated the solution into a ROS node for seamless communication and interaction within a robotic system.',
    year: '2023',
  },
  {
    title: 'EAOS Car',
    technologies: ['Python', 'C++', 'Computer Vision', 'Esp32'],
    description: 'Mini Self‑Driving car.',
    githubLink: 'https://github.com/eslam69/EAOS-Car',
    year: '2021',
  },
  {
    title: 'Real‑Time Embedded Temperature Controlling System',
    technologies: ['Embedded C', 'Design patterns', 'Atmega32'],
    githubLink: 'https://github.com/ForthePareto/Embedded-Temperature-Controlling-System',
    year: '2021',
  },
  {
    title: 'OpenStreetMap Route Planner',
    technologies: ['C++'],
    description: 'An implementation of A* Search Algorithm for finding the shortest path between two nodes on OpenStreetMap.',
    githubLink: 'https://github.com/eslam69/OpenStreetMap-Route_Planning',
    year: '2020',
  },
  {
    title: 'Linux System Monitor',
    technologies: ['C++', 'ncurses'],
    description: 'A software similar to htop that monitors the running processes in Linux OS.',
    githubLink: 'https://github.com/eslam69/Linux-System-Monitor',
    year: '2020',
  },
  {
    title: 'Hospital Computerized Maintenance Management System (CMMS)',
    technologies: ['Python', 'MySQL', 'Qt'],
    githubLink: 'https://github.com/eslam69/CMMS-for-healthcare-institutions',
    year: '2020',
  },
  {
    title: 'Digital FIR Filter for Noise Reduction In ECG Signal',
    technologies: ['8051 micro‑controller', 'DSP', 'C', 'FDA tools'],
    description: 'Developed a digital FIR filter on an 8051 microcontroller to reduce ECG signal noise. Utilized DSP algorithms in C, implemented a ring buffer for data handling, and applied floating point to fixed‑point conversion for optimization. Improved signal to noise ratio, enhancing ECG accuracy.',
    year: '2020',
  },
  {
    title: 'Music Recognizer Software (Shazam like‑App)',
    technologies: ['Python', 'DSP', 'Librosa', 'Qt'],
    githubLink: 'https://github.com/eslam69/Music-Recognizer',
    year: '2020',
  },
  {
    title: 'Blind Source Separation Software',
    technologies: ['Python', 'ICA', 'Qt'],
    description: 'The software objective is to recover the original component signals from a mixture signal, like abnormal ECG signal(with arrhythmia) or cocktail party voices mixture.',
    year: '2020',
  },
  {
    title: 'Elevator Control System',
    technologies: ['8051 micro‑controller', 'C', 'Proteus'],
    year: '2020',
  },
  {
    title: 'Assistive glasses for Alzheimer’s patient',
    technologies: ['Python', 'OpenCV', 'Arduino', 'camera', 'sensors'],
    description: 'Glasses equipped with mini camera and micro controller aimed to recognize people for the Alzheimer’s patient.',
    year: '2019',
  },
  {
    title: 'Low‑cost infants radiant warmer',
    technologies: ['Atmega16', 'motor', 'sensors'],
    year: '2020',
  },
];

const professionalDevelopment = [
  {
    title: 'Self-Driving Car Nanodegree',
    description: 'Computer Vision, Sensor Fusion, Localization, Planning and Control.',
    link: 'https://graduation.udacity.com/confirm/e/b532faaa-b2ad-11ed-a01f-d362ad080aa8',
    issuer: 'Udacity',
  },
  {
    title: 'Image and Video Processing',
    description: 'Image and video compression, spatial processing, restoration, segmentation, geometric PDEs, sparse modeling and compressed sensing',
    link: 'https://www.coursera.org/account/accomplishments/verify/HHRWSTSJDYHV',
    issuer: 'Coursera',
  },
  {
    title: 'Computer Science for Artificial Intelligence Professional Certificate',
    description: 'By HarvardX',
    link: 'https://credentials.edx.org/credentials/a50cd22470a84a6c8b5e86daf7984b7e/',
    issuer: 'edX',
  },
  {
    title: 'Deep Learning Specialization',
    description: 'By Deeplearning.AI',
    link: 'https://www.coursera.org/account/accomplishments/specialization/23Y3UNXGX254',
    issuer: 'Coursera',
  },
  {
    title: 'C++ Developer Nanodegree',
    description: 'Topics: Modern C++17, OOP, Concurrency, Memory Management and STL.',
    link: 'https://graduation.udacity.com/confirm/NWSVXPEV',
    issuer: 'Udacity',
  },
  {
    title: 'Digital Signal Processing',
    description: 'By École polytechnique fédérale de Lausanne (EPFL)',
    link: 'https://www.coursera.org/account/accomplishments/verify/KTSQDNBTQB4Z',
    issuer: 'Coursera',
  },
  {
    title: 'Machine Learning',
    description: 'By Stanford University, Course by Andrew Ng.',
    link: 'https://www.coursera.org/account/accomplishments/verify/QXZR7P642HTE',
    issuer: 'Coursera',
  },
  {
    title: 'Mathematics for Machine Learning Specialization',
    description: 'By Imperial College London',
    link: 'https://www.coursera.org/account/accomplishments/specialization/certificate/2WP9S3PNXLXS',
    issuer: 'Coursera',
  },
  {
    title: 'Reinforcement Learning: Sample-based Learning Methods',
    description: 'By University of Alberta',
    link: 'https://www.coursera.org/account/accomplishments/verify/BR9L8PAM8WTZ',
    issuer: 'Coursera',
  },
  {
    title: 'Fundamentals of Reinforcement Learning',
    description: 'By University of Alberta',
    link: 'https://www.coursera.org/account/accomplishments/verify/FY2KJNKUKVAY',
    issuer: 'Coursera',
  },
  {
    title: 'Computational Neuroscience',
    description: 'By University of Washington',
    link: 'https://www.coursera.org/account/accomplishments/verify/9JRPUWUW9N9R',
    issuer: 'Coursera',
  },
  {
    title: 'Open Source Software Development Methods',
    description: 'By The Linux Foundation',
    link: 'https://www.coursera.org/account/accomplishments/verify/X5NFU8STXLWL',
    issuer: 'Coursera',
  },
  {
    title: 'Requirements Writing',
    description: 'By The University of New South Wales',
    link: 'https://www.coursera.org/account/accomplishments/verify/WB39KYML9J87',
    issuer: 'Coursera',
  },
];
---

<Layout title={"CV - " + myName}>
  <div class="max-w-3xl mx-auto">
    <section class="mb-12">
      <h1 class="text-4xl font-bold mb-4">{myName}</h1>
      <p class="text-xl text-gray-600 dark:text-gray-300 mb-4">
        Senior Software Developer
      </p>
      <div class="flex gap-4 text-gray-600 dark:text-gray-300">
        <p>📍 Location</p>
        <p>📧 email@example.com</p>
      </div>
    </section>

    <section class="mb-12">
      <h2 class="text-2xl font-bold mb-6 text-primary-600 dark:text-primary-400">
        Education
      </h2>
      <div class="space-y-6">
        {education.map(edu => (
          <div>
            <h3 class="text-xl font-semibold">{edu.degree}</h3>
            <p class="text-gray-600 dark:text-gray-300">{edu.school}</p>
            <p class="text-gray-500 dark:text-gray-400">{edu.location}</p>
            <p class="text-gray-500 dark:text-gray-400">{edu.year}</p>
            <ul class="mt-2 list-disc list-inside space-y-1">
              {edu.description.map(item => (
                <li>{item}</li>
              ))}
            </ul>
          </div>
        ))}
      </div>
    </section>

    <section class="mb-12">
      <h2 class="text-2xl font-bold mb-6 text-primary-600 dark:text-primary-400">
        Experience
      </h2>
      <div class="space-y-8">
        {experience.map(exp => (
          <div>
            <h3 class="text-xl font-semibold">{exp.title}</h3>
            <p class="text-gray-600 dark:text-gray-300">{exp.company}</p>
            <p class="text-gray-500 dark:text-gray-400">{exp.location}</p>
            <p class="text-gray-500 dark:text-gray-400">{exp.period}</p>
            <ul class="mt-2 list-disc list-inside space-y-1">
              {exp.description.map(item => (
                <li>{item}</li>
              ))}
            </ul>
          </div>
        ))}
      </div>
    </section>

    <section class="mb-12">
      <h2 class="text-2xl font-bold mb-6 text-primary-600 dark:text-primary-400">
        Skills
      </h2>
      <div class="space-y-6">
        {skills.map(skill => (
          <div>
            <h3 class="text-xl font-semibold">{skill.category}</h3>
            <p class="text-gray-600 dark:text-gray-300">{skill.skills}</p>
          </div>
        ))}
      </div>
    </section>

    <section class="mb-12">
      <h2 class="text-2xl font-bold mb-6 text-primary-600 dark:text-primary-400">
        Professional Development
      </h2>
      <div class="space-y-4">
        {professionalDevelopment.map(dev => (
          <div>
            <h3 class="text-xl font-semibold">{dev.title}</h3>
            <p class="text-gray-600 dark:text-gray-300">{dev.description}</p>
            <a href={dev.link} class="text-primary-600 dark:text-primary-400 hover:underline">
              [Link]
            </a>
            <p class="text-gray-500 dark:text-gray-400">{dev.issuer}</p>
          </div>
        ))}
      </div>
    </section>

    <section class="mb-12">
      <h2 class="text-2xl font-bold mb-6 text-primary-600 dark:text-primary-400">
        Projects
      </h2>
      <div class="space-y-8">
        {projects.map(project => (
          <div>
            <h3 class="text-xl font-semibold">{project.title}</h3>
            <p class="text-gray-600 dark:text-gray-300">{project.technologies.join(', ')}</p>
            <p class="mt-2">{project.description}</p>
            {project.demoLink && (
              <a href={project.demoLink} class="text-primary-600 dark:text-primary-400 hover:underline">
                [Demo]
              </a>
            )}
            {project.githubLink && (
              <a href={project.githubLink} class="text-primary-600 dark:text-primary-400 hover:underline">
                [Link]
              </a>
            )}
            <p class="text-gray-500 dark:text-gray-400">{project.year}</p>
          </div>
        ))}
      </div>
    </section>
  </div>
</Layout>