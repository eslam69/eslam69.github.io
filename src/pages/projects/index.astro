---
import Layout from '../../layouts/Layout.astro';
import { projects } from '../cv.astro';
import { myName } from '../index.astro';

const categories = [
  'All', 
  'Web Development',
  'Machine Learning',
  'Open Source',
  'Embedded Systems',
  'Computer Vision',
  'IoT'
];
const allTechnologies = [...new Set(projects.flatMap(project => project.technologies))].sort();
---

<Layout title={"Projects - " + myName}>
  <div class="max-w-6xl mx-auto">
    <section class="mb-12">
      <h1 class="text-4xl font-bold mb-4">Projects</h1>
      <p class="text-xl text-gray-600 dark:text-gray-300">
        A showcase of my work, side projects, and open source contributions.
      </p>
    </section>

    <div class="mb-8">
      <div class="flex flex-wrap gap-4 mb-6">
        {categories.map(category => (
          <button
            class="category-filter px-4 py-2 rounded-full border border-gray-200 dark:border-gray-700 hover:border-primary-500 dark:hover:border-primary-400 transition-colors"
            data-category={category}
          >
            {category}
          </button>
        ))}
      </div>

      <details class="mb-8">
        <summary class="cursor-pointer text-gray-600 dark:text-gray-300 mb-4">
          Filter by Technology
        </summary>
        <div class="flex flex-wrap gap-2 pl-4">
          {allTechnologies.map(tech => (
            <label class="flex items-center gap-2 text-sm">
              <input
                type="checkbox"
                class="tech-filter"
                data-tech={tech}
              />
              {tech}
            </label>
          ))}
        </div>
      </details>
    </div>

    <div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6" id="projects-grid">
      {projects.map(project => (
        <article
          class="project-card border border-gray-200 dark:border-gray-700 rounded-lg overflow-hidden hover:shadow-lg transition-shadow"
          data-category={project.category}
          data-technologies={JSON.stringify(project.technologies)}
        >
          <img
            src={project.image}
            alt={project.title}
            class="w-full h-48 object-cover"
          />
          <div class="p-6">
            <h3 class="text-xl font-bold mb-2">{project.title}</h3>
            <p class="text-gray-600 dark:text-gray-300 mb-4">
              {project.description}
            </p>
            <div class="flex flex-wrap gap-2 mb-4">
              {project.technologies.map(tech => (
                <span class="px-2 py-1 bg-gray-100 dark:bg-gray-800 rounded-full text-sm">
                  {tech}
                </span>
              ))}
            </div>
            <div class="flex gap-4">
              {project.githubLink && (
                <a
                  href={project.githubLink}
                  target="_blank"
                  rel="noopener noreferrer"
                  class="text-gray-600 dark:text-gray-300 hover:text-primary-600 dark:hover:text-primary-400"
                >
                  <span class="sr-only">GitHub</span>
                  <svg class="h-6 w-6" fill="currentColor" viewBox="0 0 24 24">
                    <path d="M12 0c-6.626 0-12 5.373-12 12 0 5.302 3.438 9.8 8.207 11.387.599.111.793-.261.793-.577v-2.234c-3.338.726-4.033-1.416-4.033-1.416-.546-1.387-1.333-1.756-1.333-1.756-1.089-.745.083-.729.083-.729 1.205.084 1.839 1.237 1.839 1.237 1.07 1.834 2.807 1.304 3.492.997.107-.775.418-1.305.762-1.604-2.665-.305-5.467-1.334-5.467-5.931 0-1.311.469-2.381 1.236-3.221-.124-.303-.535-1.524.117-3.176 0 0 1.008-.322 3.301 1.23.957-.266 1.983-.399 3.003-.404 1.02.005 2.047.138 3.006.404 2.291-1.552 3.297-1.23 3.297-1.23.653 1.653.242 2.874.118 3.176.77.84 1.235 1.911 1.235 3.221 0 4.609-2.807 5.624-5.479 5.921.43.372.823 1.102.823 2.222v3.293c0 .319.192.694.801.576 4.765-1.589 8.199-6.086 8.199-11.386 0-6.627-5.373-12-12-12z"/>
                  </svg>
                </a>
              )}
              {project.demoLink && (
                <a
                  href={project.demoLink}
                  target="_blank"
                  rel="noopener noreferrer"
                  class="text-gray-600 dark:text-gray-300 hover:text-primary-600 dark:hover:text-primary-400"
                >
                  <span class="sr-only">Live Demo</span>
                  <svg class="h-6 w-6" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M10 6H6a2 2 0 00-2 2v10a2 2 0 002 2h10a2 2 0 002-2v-4M14 4h6m0 0v6m0-6L10 14"/>
                  </svg>
                </a>
              )}
            </div>
          </div>
        </article>
      ))}
    </div>
  </div>
</Layout>

<script>
  let activeCategory = 'All';
  const activeTechnologies = new Set();

  function updateFilters() {
    const projects = document.querySelectorAll('.project-card');
    
    projects.forEach(project => {
      const category = project.dataset.category;
      const technologies = JSON.parse(project.dataset.technologies);
      
      const matchesCategory = activeCategory === 'All' || category === activeCategory;
      const matchesTech = activeTechnologies.size === 0 || 
        technologies.some(tech => activeTechnologies.has(tech));
      
      project.style.display = matchesCategory && matchesTech ? 'block' : 'none';
    });
  }

  // Category filters
  document.querySelectorAll('.category-filter').forEach(button => {
    button.addEventListener('click', () => {
      document.querySelectorAll('.category-filter').forEach(btn => {
        btn.classList.remove('bg-primary-500', 'text-white');
      });
      button.classList.add('bg-primary-500', 'text-white');
      activeCategory = button.dataset.category;
      updateFilters();
    });
  });

  // Technology filters
  document.querySelectorAll('.tech-filter').forEach(checkbox => {
    checkbox.addEventListener('change', () => {
      const tech = checkbox.dataset.tech;
      if (checkbox.checked) {
        activeTechnologies.add(tech);
      } else {
        activeTechnologies.delete(tech);
      }
      updateFilters();
    });
  });

  // Initialize with 'All' selected
  document.querySelector('[data-category="All"]').classList.add('bg-primary-500', 'text-white');
</script>